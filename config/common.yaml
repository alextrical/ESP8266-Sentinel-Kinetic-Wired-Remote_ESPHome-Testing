esphome:
  name: vent-axia-sentinel-kinetic
  
display:
  - platform: lcd_pcf8574
    id: lcd
    dimensions: 16x2
    address: 0x27
    update_interval: 300ms
    lambda: |-
        it.printf(0, 0, "%s", id(line1).state.c_str());
        it.printf(0, 1, "%s", id(line2).state.c_str());

external_components:
  - source: components #Make sure there is a folder named components/vent_axia_sentinel_kinetic at the same location as this YAML

switch:
  - platform: vent_axia_sentinel_kinetic
    up:
      name: "Up Switch"
      id: sw_up
    down:
      name: "Down Switch"
      id: sw_down
    set:
      name: "Set Switch"
      id: sw_set
    main:
      name: "Main Switch"
      id: sw_main

binary_sensor:
  - platform: gpio
    pin:
      number: 12
      mode:
        input: true
        pullup: true
      inverted: true
    name: "Up"
    entity_category: "diagnostic"
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms
    on_press:
      - switch.turn_on: sw_up
      # - binary_sensor.template.publish:
      #     id: backlight
      #     state: ON
    on_release:
      - switch.turn_off: sw_up
  - platform: gpio
    pin:
      number: 0
      mode:
        input: true
        pullup: true
      inverted: true
      # ignore_strapping_warning: true
    name: "Down"
    entity_category: "diagnostic"
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms
    on_press:
      - switch.turn_on: sw_down
      # - binary_sensor.template.publish:
      #     id: backlight
      #     state: ON
    on_release:
      - switch.turn_off: sw_down
  - platform: gpio
    pin:
      number: 14
      mode:
        input: true
        pullup: true
      inverted: true
    name: "Set"
    entity_category: "diagnostic"
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms
    on_press:
      - switch.turn_on: sw_set
      # - binary_sensor.template.publish:
      #     id: backlight
      #     state: ON
    on_release:
      - switch.turn_off: sw_set
  - platform: gpio
    pin:
      number: 13
      mode:
        input: true
        pullup: true
      inverted: true
    name: "Main"
    entity_category: "diagnostic"
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms
    on_press:
      - switch.turn_on: sw_main
      # - binary_sensor.template.publish:
      #     id: backlight
      #     state: ON
    on_release:
      - switch.turn_off: sw_main

vent_axia_sentinel_kinetic:
  - id: demo
    uart_id: demo_uart
    line1:
      id: line1
      name: "Line 1"
    line2:
      id: line2
      name: "Line 2"
    diagnostic0:
      name: "Diagnostic 0"
      entity_category: "diagnostic"
    diagnostic1:
      name: "Diagnostic 1"
      entity_category: "diagnostic"
    diagnostic2:
      name: "Diagnostic 2"
      entity_category: "diagnostic"
    diagnostic3:
      name: "Diagnostic 3"
      entity_category: "diagnostic"
    diagnostic4:
      name: "Diagnostic 4"
      entity_category: "diagnostic"
    diagnostic5:
      name: "Diagnostic 5"
      entity_category: "diagnostic"
    diagnostic6:
      id: diagnostic6
    diagnostic7:
      id: diagnostic7
    diagnostic8:
      id: diagnostic8
    diagnostic9:
      id: diagnostic9
    diagnostic10:
      id: diagnostic10
    diagnostic11:
      id: diagnostic11
    diagnostic12:
      id: diagnostic12
    diagnostic13:
      id: diagnostic13
    diagnostic14:
      id: diagnostic14
    diagnostic15:
      id: diagnostic15
    diagnostic16:
      id: diagnostic16
    diagnostic17:
      id: diagnostic17
    diagnostic18:
      id: diagnostic18
    diagnostic19:
      id: diagnostic19
    diagnostic20:
      id: diagnostic20
    diagnostic21:
      id: diagnostic21
    diagnostic22:
      id: diagnostic22
    diagnostic23:
      id: diagnostic23
    diagnostic24:
      id: diagnostic24
    diagnostic25:
      id: diagnostic25
    diagnostic26:
      id: diagnostic26
    diagnostic27:
      id: diagnostic27
    diagnostic28:
      id: diagnostic28

# uart_demo2:
#   - id: demo
#     uart_id: demo_uart
#     the_text:
#       id: line1
#     the_text2:
#       id: line2
    # the_sensor:
    #   id: the_sensor
    # the_bin_output:
    #   id: the_bin_out
    # the_flt_output:
    #   id: the_flt_out
    # the_binsensor:
    #   id: the_binsensor
    # the_switch:
    #   id: the_switch
    # the_button:
    #   id: the_button

# light:
#   - platform: binary
#     name: Binary Light
#     output: the_bin_out
  # - platform: monochromatic
  #   name: Float Light
  #   output: the_flt_out

# interval:
#   - interval: 10s
#     then:
#       - switch.toggle: the_switch
#       - button.press: the_button