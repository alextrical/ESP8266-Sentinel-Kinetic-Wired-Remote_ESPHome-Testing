esphome:
  name: display-test
  # includes:
  #   - custom_lambdas.h
  # on_boot:
  #   then:
  #     - lambda: |-
  #         id(uart_bus).write_array(id(alive_str), 8); // Send the 8-byte array over UART

esp32:
  variant: esp32s3
  board: esp32-s3-devkitc-1
  framework:
    type: esp-idf

logger:
  deassert_rts_dtr: true
  hardware_uart : UART0
  level: DEBUG



# globals:
#   - id: button_sum
#     type: int
#     initial_value: '0'
#   - id: va_out_buff
#     type: uint8_t[8]
#     initial_value: '{0x04,0x05,0xAF,0xEF,0xFB,0x00,0x00,0x00}'
#   - id: alive_str
#     type: uint8_t[8]
#     initial_value: '{0x04,0x06,0xFF,0xFF,0xFF,0x10,0xFC,0xE8}'


uart:
  id: uart_bus
  baud_rate: 9600
  data_bits: 8
  parity: NONE
  stop_bits: 1
  tx_pin: GPIO1
  rx_pin: GPIO2
  # tx_pin: GPIO17 #GPIO43
  # rx_pin: GPIO18 #GPIO44

external_components:
  - source: github://eigger/espcomponents@latest
    components: [ uartex ]
    refresh: always

uartex:
  # rx_timeout: 10ms
  # tx_delay: 50ms
  # tx_timeout: 500ms
  # tx_retry_cnt: 3
  rx_timeout: 10ms
  rx_header: [0x02, 0x00]
  # rx_footer: [0xDC]
  rx_checksum2: !lambda |-
    uint16_t crc = 0xFFFF - 0x02;
    for (int i = 0; i < len; i++)
    {
      crc -= data[i];
    }
    return { (uint8_t)(crc >> 8), (uint8_t)(crc & 0xFF) };

  version:
    disabled: False
  error:
    disabled: False
  log:
    disabled: False

text_sensor:
  - platform: uartex
    name: "Line1"
    id: "line1"
    lambda: |-
      std::string s;
      for (int i = 4; i < 20; i++) {
        s += static_cast<char>(data[i]);
      }
      return s.c_str();
  - platform: uartex
    name: "Line2"
    id: "line2"
    lambda: |-
      std::string s;
      for (int i = 21; i < 36; i++) {
        s += static_cast<char>(data[i]);
      }
      return s.c_str();

i2c:
  sda: 8
  scl: 9
  scan: false


display:
  - platform: lcd_pcf8574
    id: lcd
    dimensions: 16x2
    address: 0x27
    # update_interval: 100ms
    lambda: |-
      it.printf(0, 0, "%s", id(line1).state.c_str());
      it.printf(0, 1, "%s", id(line2).state.c_str());